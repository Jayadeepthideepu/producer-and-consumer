#include <pthread.h>
#include <semaphore.h>
#include <stdio.h>

int buffer;
sem_t empty, full;

void *producer(void *arg) {
    for (int i = 1; i <= 10; i++) {
        sem_wait(&empty);
        printf("Produced: %d\n", buffer = i);
        sem_post(&full);
    }
    return NULL;
}

void *consumer(void *arg) {
    for (int i = 1; i <= 10; i++) {
        sem_wait(&full);
        printf("Consumed: %d\n", buffer);
        sem_post(&empty);
    }
    return NULL;
}

int main() {
    pthread_t prod, cons;
    sem_init(&empty, 0, 1);
    sem_init(&full, 0, 0);
    pthread_create(&prod, NULL, producer, NULL);
    pthread_create(&cons, NULL, consumer, NULL);
    pthread_join(prod, NULL);
    pthread_join(cons, NULL);
    return 0;
}
